direction = "auto"))
})
# covid by country
covid_by_ctry = reactive({
covid_tidy %>% filter(country %in% input$country_select)
})
# covid US days since 100
# reactive
reactive_annot = reactive({
covid_tidy_days_since_100 %>%
filter(country %in% input$country_select) %>%
group_by(country) %>%
filter(days_since_100 == max(days_since_100))
})
# reactive
reactive_days_100 = reactive({
covid_tidy_days_since_100 %>%
filter(country %in% input$country_select)
})
# Plotly New/Cumlative/Cumulative Log Cases by Country
output$country_plot_cumulative_log <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'log_cumulative')
})
output$country_plot <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'new')
})
output$country_plot_cumulative <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'cumulative')
})
output$country_plot_days_since_100 <- renderPlotly({
country_cases_plot(reactive_days_100(), 'days_since_100') %>%
add_annotations(x = reactive_annot()$days_since_100,
y = log(reactive_annot()$value),
color = ~factor(reactive_annot()$country),
text = reactive_annot()$country,
showarrow = F,
ax = 30,
font = list(family = 'sans serif',
size = 14))
})
}
shinyApp(ui, server)
shinyApp(ui, server)
today
shinyApp(ui, server)
url <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv'
covid <- read_csv(url(url))
names(covid)
url <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
covid <- read_csv(url(url))
covid_by_ctry <- covid %>%
group_by(`Country/Region`) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid_by_ctry <- covid_by_ctry[covid_by_ctry[, ncol(covid_by_ctry)] > 200,]
covid_tidy <- covid_by_ctry %>%
tidyr::gather(date,value,4:ncol(covid_by_ctry))
covid_tidy_days_since_100 <- covid_tidy %>%
filter(value > 100) %>%
group_by(country) %>%
mutate(days = 1) %>%
mutate(days_since_100 = cumsum(days))
cv_today <- covid_tidy %>%
mutate(date = as.Date(date, format = '%m/%d/%Y')) %>%
filter(date == max(date)) %>%
arrange(-value)
country_cases_plot = function(cv_cases, type = 'cumulative') {
## Font
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Date",
titlefont = f
)
y <- list(
title = "Cumulative Infected Cases",
titlefont = f
)
## Plot
if(type == 'cumulative'){
plot = cv_cases %>%
mutate(date = as.Date(date, format = "%m/%d/%Y")) %>%
group_by(country) %>%
plot_ly(x = ~date) %>%
add_lines(y = ~value, color = ~factor(country)) %>%
layout(xaxis = x, yaxis = y)
}
if(type == 'new'){
plot = cv_cases %>%
mutate(date = as.Date(date, format = "%m/%d/%Y")) %>%
group_by(country) %>%
arrange(date) %>%
mutate(new_cases = value - lag(value, default = first(value))) %>%
group_by(country) %>%
plot_ly(x = ~date) %>%
add_lines(y = ~new_cases, color = ~factor(country)) %>%
layout(xaxis = x, yaxis = y)
}
if(type == 'log_cumulative'){
plot = cv_cases %>%
mutate(date = as.Date(date, format = "%m/%d/%Y")) %>%
mutate(log_cum = ifelse(value == 0, 0, log(value))) %>%
group_by(country) %>%
plot_ly(x = ~date) %>%
add_lines(y = ~log_cum, color = ~factor(country)) %>%
layout(xaxis = x, yaxis = y)
}
if(type == 'days_since_100'){
annotation_df <- cv_cases %>%
group_by(country) %>%
filter(days_since_100 == max(days_since_100))
plot = cv_cases %>%
group_by(country) %>%
plot_ly(x = ~days_since_100) %>%
add_lines(y = ~log(value), color = ~factor(country)) %>%
layout(xaxis = x, yaxis = y)
}
plot
}
ui <- navbarPage(theme = shinytheme("darkly"), collapsible = TRUE,
"COVID-19 NYL", id="nav",
tabPanel("COVID-19 US Map by County",
div(class="outer",
tags$head(includeCSS("styles.css")),
leafletOutput("mymap", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default",
top = 80, left = 20, width = 350, fixed=TRUE,
draggable = TRUE, height = 'auto',
h3(textOutput("reactive_case_count"), align = "center", style="color:#006d2c"),
h5(textOutput("reactive_last_update"), align = "center", style="color:#006d2c"),
h5('Select date for mapping', style='color:#000000'),
sliderInput("plot_date",
label = 'Select date for mapping',
min = min_date,
max = max_date,
value = current_date,
timeFormat = "%d %b",
animate=animationOptions(interval = 2000, loop = FALSE)),
h5('Select at least one state', style='color:#000000'),
pickerInput("state_select", "State:",
choices = sort(unique(cty_data_gather$State)),
options = list(`actions-box` = TRUE),
selected = 'NY',
multiple = TRUE),
),
)
),
tabPanel("Country plots",
sidebarLayout(
sidebarPanel(
pickerInput("country_select", "Country:",
choices = cv_today$country,
options = list(`actions-box` = TRUE),
selected = cv_today$country,
multiple = TRUE),
"Select outcome and countries from drop-down menues to update plots."
),
mainPanel(
tabsetPanel(
tabPanel("New", plotlyOutput("country_plot", height = '800px')),
tabPanel("Cumulative", plotlyOutput("country_plot_cumulative", height = '800px')),
tabPanel("Cumulative (log10)", plotlyOutput("country_plot_cumulative_log", height = '800px')),
tabPanel("Days since 100", plotlyOutput("country_plot_days_since_100", height = '800px'))
)
)
)
),
tabPanel("About this site",
tags$div(
tags$h4("Last update"),
h6(paste0(today)),
"This site",tags$br(),
)
)
)
server = function(input, output) {
# covid US country map
# reactive by date
reactive_covid = reactive({
cty_data_gather = cty_data_gather %>% filter(date == input$plot_date)
cty@data <- cty_data_gather
cty@data$INFECTED <- cty@data$value
if(is.null(input$state_select)){
cty@data$INFECTED = 0
return(cty)
} else{
cty = subset(cty, State %in% input$state_select)
return(cty)
}
})
# Count in Selected State
output$reactive_case_count <- renderText({
paste0(prettyNum(sum(reactive_covid()@data$INFECTED), big.mark=","), " cases")
})
# Last Update
output$reactive_last_update <- renderText({
paste0("Last Updated: ", unique(reactive_covid()@data$last_update)[1])
})
# Base leaflet map
output$mymap <- renderLeaflet({
basemap
})
# Reactive Label
labels <- reactive({
sprintf(
"<strong>%s</strong><br/>%g Confirmed Cases",
reactive_covid()@data$NAME, reactive_covid()@data$INFECTED
) %>% lapply(htmltools::HTML)
})
# Observe Event
observeEvent(reactive_covid(), {
leafletProxy("mymap") %>%
clearShapes() %>%
addPolygons(data = reactive_covid(),
color = '#444444', weight = 1, smoothFactor = 0.5,
opacity = 0.5, fillOpacity = 0.9,
fillColor = ~pal(INFECTED),
highlightOptions = highlightOptions(color = 'white', weight = 2, bringToFront = T),
label = labels(),
labelOptions = labelOptions(
style = list("font-weight" = "normal"),
textsize = "15px",
direction = "auto"))
})
# covid by country
covid_by_ctry = reactive({
covid_tidy %>% filter(country %in% input$country_select)
})
# covid US days since 100
# reactive
reactive_annot = reactive({
covid_tidy_days_since_100 %>%
filter(country %in% input$country_select) %>%
group_by(country) %>%
filter(days_since_100 == max(days_since_100))
})
# reactive
reactive_days_100 = reactive({
covid_tidy_days_since_100 %>%
filter(country %in% input$country_select)
})
# Plotly New/Cumlative/Cumulative Log Cases by Country
output$country_plot_cumulative_log <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'log_cumulative')
})
output$country_plot <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'new')
})
output$country_plot_cumulative <- renderPlotly({
country_cases_plot(covid_by_ctry(), 'cumulative')
})
output$country_plot_days_since_100 <- renderPlotly({
country_cases_plot(reactive_days_100(), 'days_since_100') %>%
add_annotations(x = reactive_annot()$days_since_100,
y = log(reactive_annot()$value),
color = ~factor(reactive_annot()$country),
text = reactive_annot()$country,
showarrow = F,
ax = 30,
font = list(family = 'sans serif',
size = 14))
})
}
shinyApp(ui, server)
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_death_global.csv'
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_death_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
names(covid_death)
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
covid_by_ctry <- covid %>%
group_by(`Country/Region`) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid <- bind_rows(covid_confirm, covid_death)
dim(covid)
table(covid$type)
covid_by_ctry <- covid %>%
group_by(`Country/Region`) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid_by_ctry <- covid_by_ctry[covid_by_ctry[, ncol(covid_by_ctry)] > 200,] # at least 200 confirmed cases
covid_tidy <- covid_by_ctry %>%
tidyr::gather(date,value,4:ncol(covid_by_ctry))
table(covid_tidy$type)
dim(covid_by_ctry)
names(covid_by_ctry)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
names(covid_by_ctry)
names(covid)
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
covid <- bind_rows(covid_confirm, covid_death)
names(covid)
col_index <- grep('^[0:9]', names(covid_death))
col_index
names(covid_death)
col_index <- grep('^[0-9]', names(covid_death))
col_index
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
names(covid_death)
covid <- bind_rows(covid_confirm, covid_death)
names(covid)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid_by_ctry <- covid_by_ctry[covid_by_ctry[, ncol(covid_by_ctry)] > 200,] # at least 200 confirmed cases
dim(covid_by_ctry)
table(covid_by_ctry$type)
dim(covid_death)
unique(covid_death)
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
dim(covid_by_ctry)
table(covid_by_ctry$type)
covid_by_ctry <- covid_by_ctry[covid_by_ctry[type == 'CONFIRM', ncol(covid_by_ctry)] > 200,] # at least 200 confirmed cases
covid_by_ctry <- covid_by_ctry[covid_by_ctry[covid_by_ctry$type == 'CONFIRM', ncol(covid_by_ctry)] > 200,] # at least 200 confirmed cases
names(covid_by_ctry)
?select
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>% select(1, n()) # identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>% select(1, 2 # identify countries with more than 200 confirmed cases
)
dim(ctry_with_200plus)
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>% select(1, -1) # identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>% select(1, ncol(covid_by_ctry)) # identify countries with more than 200 confirmed cases
ctry_with_200plus
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
filter(vars(ncol(covid_by_ctry)) > 200)# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry)) # identify countries with more than 200 confirmed cases
dim(ctry_with_200plus)
ctry_with_200plus <- ctry_with_200plus[ctry_with_200plus[, 2] > 200, ]
ctry_with_200plus
ctry_with_200plus <- ctry_with_200plus$country
ctry_with_200plus
covid_tidy <- covid_by_ctry %>%
filter(country %in% ctry_with_200plus) %>%
tidyr::gather(date,value,4:ncol(covid_by_ctry))
dim(covid_tidy)
names(covid_tidy)
table(covid_tidy$type)
View(covid_tidy)
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry))
ctry_with_200plus <- ctry_with_200plus[ctry_with_200plus[, 2] > 200, ]
ctry_with_200plus <- ctry_with_200plus$country
ctry_with_200plus
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid_by_ctry
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry))
ctry_with_200plus
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry))
ctry_with_200plus <- ctry_with_200plus[ctry_with_200plus[, 2] > 200, ]
ctry_with_200plus
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
covid_by_ctry <- covid %>%
group_by(`Country/Region`, type) %>%
summarise_if(is.numeric, sum, na.rm = T) %>%
rename(country = `Country/Region`)
covid_by_ctry
dim(covid_by_ctry)
table(covid_by_ctry$type)
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry))
ctry_with_200plus
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM') %>%
select(1, ncol(covid_by_ctry))
View(ctry_with_200plus)
View(covid_by_ctry)
ctry_with_200plus$`3/24/2020`
covid_by_ctry %>% select(1, ncol(covid_by_ctry))
covid_by_ctry %>% select(1, ncol(covid_by_ctry)) %>% filter(type == 'CONFIRM')
covid_by_ctry %>% select(1, ncol(covid_by_ctry)) %>% filter(type == 'CONFIRM')
covid_by_ctry %>% select(1, type, ncol(covid_by_ctry)) %>% filter(type == 'CONFIRM')
View(covid_by_ctry %>% select(1, type, ncol(covid_by_ctry)) %>% filter(type == 'CONFIRM'))
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% filter(type == 'CONFIRM')
ctry_with_200plus
View(ctry_with_200plus)
covid_by_ctry
View(covid_by_ctry)
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% dplyr::filter(type == 'CONFIRM')
ctry_with_200plus
ctry_with_200plus <- ctry_with_200plus[ctry_with_200plus[, ncol(ctry_with_200plus)] > 200, ]
ctry_with_200plus
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% dplyr::filter(type == 'CONFIRM')
ctry_with_200plus <- ctry_with_200plus[ctry_with_200plus[, ncol(ctry_with_200plus)] > 200, ]
dim(ctry_with_200plus)
ctry_with_200plus
# identify countries with more than 200 confirmed cases
ctry_with_200plus <- covid_by_ctry %>% dplyr::filter(type == 'CONFIRM')
dim(ctry_with_200plus)
names(ctry_with_200plus)
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
names(covid_death)
col_index <- grep('^[0-9]', names(covid_death))
names(covid_death)[col_index] <- paste0(names(covid_death)[col_index], '20')
covid <- bind_rows(covid_confirm, covid_death)
dim(covid)
names(covid)
url_confirm <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
url_death <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
covid_confirm$type = 'CONFIRM'
covid_death$type = 'DEATH'
names(covid_confirm)
covid_confirm <- read_csv(url(url_confirm))
covid_death <- read_csv(url(url_death))
names(covid_confirm)
names(covid_confirm)
names(covid_death)
